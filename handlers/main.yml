---
# handlers file for ansible-cis-ubuntu-2204

# ------------------------------------------------------------------------------

- name: "HANDLER | 1.1.2.1 | systemd restart and enable tmp.mount"
  become: true
  ansible.builtin.systemd_service:
    name: tmp.mount
    daemon_reload: true
    enabled: true
    masked: false
    state: reloaded
  listen: systemd restart and enable tmp.mount

# ------------------------------------------------------------------------------

- name: "HANDLER | 1.3.1 | systemd restart and enable apparmor"
  become: true
  ansible.builtin.systemd_service:
    name: apparmor.service
    daemon_reload: true
    enabled: true
    masked: false
    state: restarted
  listen: restart apparmor
  when: ansible_virtualization_type != "docker"

- name: "HANDLER | 1.5.3 | systemd restart and enable systemd-coredump"
  become: true
  ansible.builtin.systemd_service:
    name: systemd-coredump.socket
    daemon_reload: true
    enabled: true
    masked: false
    state: restarted
  listen: restart systemd-coredump

# ------------------------------------------------------------------------------

- name: "HANDLER | 2.3.2.1 | systemd restart and enable systemd-timesyncd"
  become: true
  ansible.builtin.systemd_service:
    name: systemd-timesyncd
    daemon_reload: true
    enabled: true
    masked: false
    state: restarted
  listen: "restart systemd-timesyncd"

- name: "HANDLER | 2.3.1.1, 2.3.3.1-2 | systemd restart and enable chrony"
  become: true
  ansible.builtin.systemd_service:
    name: chrony
    daemon_reload: true
    enabled: true
    masked: false
    state: restarted
  listen: "restart chrony"

# ------------------------------------------------------------------------------

- name: "HANDLER | 6.2.1.1 | systemd restart and enable systemd-journald"
  become: true
  ansible.builtin.systemd_service:
    name: systemd-journald
    daemon_reload: true
    enabled: true
    masked: false
    state: restarted
  listen: "restart systemd-journald"
  when: ansible_virtualization_type != "docker"

- name: "HANDLER | 6.2.1.2 | systemd restart and enable systemd-journal-upload"
  become: true
  ansible.builtin.systemd_service:
    name: systemd-journal-upload
    daemon_reload: true
    enabled: true
    masked: false
    state: restarted
  listen: "restart systemd-journal-upload"
  when: ansible_virtualization_type != "docker"

- name: "HANDLER | 6.3.2 | systemd restart and enable auditd"
  become: true
  ansible.builtin.systemd_service:
    name: auditd
    daemon_reload: true
    enabled: true
    masked: false
    state: restarted
  listen: "restart auditd"
  when: ansible_virtualization_type != "docker"

# ------------------------------------------------------------------------------

- name: "HANDLER | 1.4.2 | generate new grub config"
  become: true
  ansible.builtin.command: >
    grub-mkconfig -o {{ cis_grub_cfg.stat.path }}
  listen: generate new grub config
  changed_when: false
  notify: fix permissions after generate new grub config handler
  when: ansible_virtualization_type != "docker"

- name: "HANDLER | 1.4.2 | fix permissions after generate new grub config handler"
  become: true
  ansible.builtin.file:
    path: "/boot/grub/grub.cfg"
    owner: root
    group: root
    mode: "0400"
  listen: fix permissions after generate new grub config handler

# ------------------------------------------------------------------------------

- name: "HANDLER | 1.3.1.2, 3.1.1, 6.3.1 | update-grub"
  become: true
  ansible.builtin.command: /usr/sbin/update-grub
  changed_when: false
  listen: update-grub
  when: ansible_virtualization_type != "docker"

- name: "HANDLER | 6.3.3 | merge and load the rules into active configuration"
  become: true
  ansible.builtin.command: /sbin/augenrules --load
  changed_when: false
  failed_when: false
  listen: load audit rules
  notify: restart auditd
