---
# tasks file for ansible-cis-ubuntu-2204

# ------------------------------------------------------------------------------

- name: "SECTION3 | 3.1.1 | Ensure IPv6 status is identified"
  when:
    - cis_ubuntu2204_rule_3_1_1
  tags:
    - rule_3_1
    - server_l1
    - workstation_l1
  block:
    - name: "SECTION3 | 3.1.1 | Ensure IPv6 status is identified | sysctl"
      ansible.posix.sysctl:
        name: "{{ item }}"
        value: "{{ 0 if cis_ubuntu2204_required_ipv6 else 1 }}"
        sysctl_file: "{{ cis_ubuntu2204_sysctl_file_path }}"
        sysctl_set: true
        state: present
        reload: true
        ignoreerrors: true
      with_items:
        - net.ipv6.conf.all.disable_ipv6
        - net.ipv6.conf.default.disable_ipv6
        - net.ipv6.conf.lo.disable_ipv6
    - name: "SECTION3 | 3.1.1 | Ensure IPv6 status is identified | grub add"
      ansible.builtin.replace:
        dest: "{{ cis_ubuntu2204_default_grub_file }}"
        regexp: '^(GRUB_CMDLINE_LINUX=\"(?!.*ipv6.disable=)[^\"]*)(\".*)'
        replace: '\1 ipv6.disable={{ 0 if cis_ubuntu2204_required_ipv6 else 1 }}\2'
      notify: update-grub
    - name: "SECTION3 | 3.1.1 | Ensure IPv6 status is identified | grub replace"
      ansible.builtin.replace:
        dest: "{{ cis_ubuntu2204_default_grub_file }}"
        regexp: "ipv6.disable={{ 0 if not cis_ubuntu2204_required_ipv6 else 1 }}"
        replace: "ipv6.disable={{ 0 if cis_ubuntu2204_required_ipv6 else 1 }}"
      notify: update-grub

# - name: "SECTION3 | 3.1.2 | Ensure wireless interfaces are disabled"
#   when:
#     - cis_ubuntu2204_rule_3_1_2
#   tags:
#     - rule_3_1
#     - server_l1
#     - workstation_l2

- name: "SECTION3 | 3.1.3 | Ensure bluetooth services are not in use"
  ansible.builtin.include_tasks: sub-task-services-clean.yml
  with_items:
    - title: "SECTION3 | 3.1.3 | Ensure bluetooth services are not in use"
      service:
        - bluetooth.service
      apt:
        - bluez
      disable: "{{ cis_ubuntu2204_rule_3_1_3 }}"
      remove: "{{ cis_ubuntu2204_rule_3_1_3_remove }}"
  loop_control:
    loop_var: outer_item
  when:
    - cis_ubuntu2204_rule_3_1_3 or cis_ubuntu2204_rule_3_1_3_remove
  tags:
    - rule_3_1
    - server_l1
    - workstation_l2

# ------------------------------------------------------------------------------

- name: "SECTION3 | 3.2.1 | Ensure dccp kernel module is not available"
  when:
    - cis_ubuntu2204_rule_3_2_1
  tags:
    - rule_3_2
    - server_l2
    - workstation_l2
  block:
    - name: "SECTION3 | 3.2.1 | Ensure dccp kernel module is not available | setting module and deny listing"
      ansible.builtin.lineinfile:
        dest: /etc/modprobe.d/cis.conf
        regexp: "{{ item.reg }}"
        line: "{{ item.line }}"
        state: present
        create: true
        owner: "{{ cis_ubuntu2204_section3_owner_default }}"
        group: "{{ cis_ubuntu2204_section3_group_default }}"
        mode: "{{ cis_ubuntu2204_section3_mode_default }}"
      with_items:
        - reg: '{{ cis_ubuntu2204_regex_base_search }}install dccp(\s|$)'
          line: "install dccp /bin/false"
        - reg: "{{ cis_ubuntu2204_regex_base_search }}blacklist dccp$"
          line: "blacklist dccp"
    - name: "SECTION3 | 3.2.1 | Ensure dccp kernel module is not available | unloading module"
      community.general.modprobe:
        name: dccp
        state: absent
      when: ansible_virtualization_type != "docker"

- name: "SECTION3 | 3.2.2 | Ensure tipc kernel module is not available"
  when:
    - cis_ubuntu2204_rule_3_2_2
  tags:
    - rule_3_2
    - server_l2
    - workstation_l2
  block:
    - name: "SECTION3 | 3.2.2 | Ensure tipc kernel module is not available | setting module and deny listing"
      ansible.builtin.lineinfile:
        dest: /etc/modprobe.d/cis.conf
        regexp: "{{ item.reg }}"
        line: "{{ item.line }}"
        state: present
        create: true
        owner: "{{ cis_ubuntu2204_section3_owner_default }}"
        group: "{{ cis_ubuntu2204_section3_group_default }}"
        mode: "{{ cis_ubuntu2204_section3_mode_default }}"
      with_items:
        - reg: '{{ cis_ubuntu2204_regex_base_search }}install tipc(\s|$)'
          line: "install tipc /bin/false"
        - reg: "{{ cis_ubuntu2204_regex_base_search }}blacklist tipc$"
          line: "blacklist tipc"
    - name: "SECTION3 | 3.2.2 | Ensure tipc kernel module is not available | unloading module"
      community.general.modprobe:
        name: tipc
        state: absent
      when: ansible_virtualization_type != "docker"

- name: "SECTION3 | 3.2.3 | Ensure rds kernel module is not available"
  when:
    - cis_ubuntu2204_rule_3_2_3
  tags:
    - rule_3_2
    - server_l2
    - workstation_l2
  block:
    - name: "SECTION3 | 3.2.3 | Ensure rds kernel module is not available | setting module and deny listing"
      ansible.builtin.lineinfile:
        dest: /etc/modprobe.d/cis.conf
        regexp: "{{ item.reg }}"
        line: "{{ item.line }}"
        state: present
        create: true
        owner: "{{ cis_ubuntu2204_section3_owner_default }}"
        group: "{{ cis_ubuntu2204_section3_group_default }}"
        mode: "{{ cis_ubuntu2204_section3_mode_default }}"
      with_items:
        - reg: '{{ cis_ubuntu2204_regex_base_search }}install rds(\s|$)'
          line: "install rds /bin/false"
        - reg: "{{ cis_ubuntu2204_regex_base_search }}blacklist rds$"
          line: "blacklist rds"
    - name: "SECTION3 | 3.2.3 | Ensure rds kernel module is not available | unloading module"
      community.general.modprobe:
        name: rds
        state: absent
      when: ansible_virtualization_type != "docker"

- name: "SECTION3 | 3.2.4 | Ensure sctp kernel module is not available"
  when:
    - cis_ubuntu2204_rule_3_2_4
  tags:
    - rule_3_2
    - server_l2
    - workstation_l2
  block:
    - name: "SECTION3 | 3.2.4 | Ensure sctp kernel module is not available | setting module and deny listing"
      ansible.builtin.lineinfile:
        dest: /etc/modprobe.d/cis.conf
        regexp: "{{ item.reg }}"
        line: "{{ item.line }}"
        state: present
        create: true
        owner: "{{ cis_ubuntu2204_section3_owner_default }}"
        group: "{{ cis_ubuntu2204_section3_group_default }}"
        mode: "{{ cis_ubuntu2204_section3_mode_default }}"
      with_items:
        - reg: '{{ cis_ubuntu2204_regex_base_search }}install sctp(\s|$)'
          line: "install sctp /bin/false"
        - reg: "{{ cis_ubuntu2204_regex_base_search }}blacklist sctp$"
          line: "blacklist sctp"
    - name: "SECTION3 | 3.2.4 | Ensure sctp kernel module is not available | unloading module"
      community.general.modprobe:
        name: sctp
        state: absent
      when: ansible_virtualization_type != "docker"

# ------------------------------------------------------------------------------

- name: "SECTION3 | 3.3.1 | Ensure ip forwarding is disabled"
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: "0"
    sysctl_file: "{{ cis_ubuntu2204_sysctl_file_path }}"
    sysctl_set: true
    state: present
    reload: true
    ignoreerrors: true
  with_items:
    - net.ipv4.ip_forward
    - net.ipv6.conf.all.forwarding
  when:
    - cis_ubuntu2204_rule_3_3_1
  tags:
    - rule_3_3
    - server_l1
    - workstation_l1

- name: "SECTION3 | 3.3.2 | Ensure packet redirect sending is disabled"
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: "0"
    sysctl_file: "{{ cis_ubuntu2204_sysctl_file_path }}"
    sysctl_set: true
    state: present
    reload: true
    ignoreerrors: true
  with_items:
    - net.ipv4.conf.all.send_redirects
    - net.ipv4.conf.default.send_redirects
  when:
    - cis_ubuntu2204_rule_3_3_2
  tags:
    - rule_3_3
    - server_l1
    - workstation_l1

- name: "SECTION3 | 3.3.3 | Ensure bogus icmp responses are ignored"
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: "1"
    sysctl_file: "{{ cis_ubuntu2204_sysctl_file_path }}"
    sysctl_set: true
    state: present
    reload: true
    ignoreerrors: true
  with_items:
    - net.ipv4.icmp_ignore_bogus_error_responses
  when:
    - cis_ubuntu2204_rule_3_3_3
  tags:
    - rule_3_3
    - server_l1
    - workstation_l1

- name: "SECTION3 | 3.3.4 | Ensure broadcast icmp requests are ignored"
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: "1"
    sysctl_file: "{{ cis_ubuntu2204_sysctl_file_path }}"
    sysctl_set: true
    state: present
    reload: true
    ignoreerrors: true
  with_items:
    - net.ipv4.icmp_echo_ignore_broadcasts
  when:
    - cis_ubuntu2204_rule_3_3_4
  tags:
    - rule_3_3
    - server_l1
    - workstation_l1

- name: "SECTION3 | 3.3.5 | Ensure ICMP redirects are not accepted"
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: "0"
    sysctl_file: "{{ cis_ubuntu2204_sysctl_file_path }}"
    sysctl_set: true
    state: present
    reload: true
    ignoreerrors: true
  with_items:
    - net.ipv4.conf.all.accept_redirects
    - net.ipv4.conf.default.accept_redirects
    - net.ipv6.conf.all.accept_redirects
    - net.ipv6.conf.default.accept_redirects
  when:
    - cis_ubuntu2204_rule_3_3_5
  tags:
    - rule_3_3
    - server_l1
    - workstation_l1

- name: "SECTION3 | 3.3.6 | Ensure secure ICMP redirects are not accepted"
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: "0"
    sysctl_file: "{{ cis_ubuntu2204_sysctl_file_path }}"
    sysctl_set: true
    state: present
    reload: true
    ignoreerrors: true
  with_items:
    - net.ipv4.conf.default.secure_redirects
    - net.ipv4.conf.all.secure_redirects
  when:
    - cis_ubuntu2204_rule_3_3_6
  tags:
    - rule_3_3
    - server_l1
    - workstation_l1

- name: "SECTION3 | 3.3.7 | Ensure Reverse Path Filtering is enabled"
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: "1"
    sysctl_file: "{{ cis_ubuntu2204_sysctl_file_path }}"
    sysctl_set: true
    state: present
    reload: true
    ignoreerrors: true
  with_items:
    - net.ipv4.conf.all.rp_filter
    - net.ipv4.conf.default.rp_filter
  when:
    - cis_ubuntu2204_rule_3_3_7
  tags:
    - rule_3_3
    - server_l1
    - workstation_l1

- name: "SECTION3 | 3.3.8 | Ensure source routed packets are not accepted"
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: "0"
    sysctl_file: "{{ cis_ubuntu2204_sysctl_file_path }}"
    sysctl_set: true
    state: present
    reload: true
    ignoreerrors: true
  with_items:
    - net.ipv4.conf.all.accept_source_route
    - net.ipv4.conf.default.accept_source_route
    - net.ipv6.conf.all.accept_source_route
    - net.ipv6.conf.default.accept_source_route
  when:
    - cis_ubuntu2204_rule_3_3_8
  tags:
    - rule_3_3
    - server_l1
    - workstation_l1

- name: "SECTION3 | 3.3.9 | Ensure suspicious packets are logged"
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: "1"
    sysctl_file: "{{ cis_ubuntu2204_sysctl_file_path }}"
    sysctl_set: true
    state: present
    reload: true
    ignoreerrors: true
  with_items:
    - net.ipv4.conf.all.log_martians
    - net.ipv4.conf.default.log_martians
  when:
    - cis_ubuntu2204_rule_3_3_9
  tags:
    - rule_3_3
    - server_l1
    - workstation_l1
    - molecule-idempotence-notest

- name: "SECTION3 | 3.3.10 | Ensure TCP SYN Cookies is enabled"
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: "1"
    sysctl_file: "{{ cis_ubuntu2204_sysctl_file_path }}"
    sysctl_set: true
    state: present
    reload: true
    ignoreerrors: true
  with_items:
    - net.ipv4.tcp_syncookies
  when:
    - cis_ubuntu2204_rule_3_3_10
  tags:
    - rule_3_3
    - server_l1
    - workstation_l1

- name: "SECTION3 | 3.3.11 | Ensure IPv6 router advertisements are not accepted"
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: "0"
    sysctl_file: "{{ cis_ubuntu2204_sysctl_file_path }}"
    sysctl_set: true
    state: present
    reload: true
    ignoreerrors: true
  with_items:
    - net.ipv6.conf.all.accept_ra
    - net.ipv6.conf.default.accept_ra
  when:
    - cis_ubuntu2204_rule_3_3_11
  tags:
    - rule_3_3
    - server_l1
    - workstation_l1
